version: "3"

services:
  # Caddy 服务器
  caddy:
    image: caddy:2
    container_name: caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./sites:/etc/caddy/sites
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - gateway

  # caddy-gen 服务
  caddy-gen:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: caddy-gen
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./sites:/data
    environment:
      - CADDY_GEN_NETWORK=gateway
      - CADDY_GEN_OUTFILE=/data/docker-sites.caddy
      - CADDY_GEN_NOTIFY={"containerId":"caddy","workingDir":"/etc/caddy","command":["caddy","reload"]}
    networks:
      - gateway

  # 测试服务 1 - 简单的 Nginx 网站
  web1:
    image: nginx:alpine
    container_name: web1
    restart: unless-stopped
    volumes:
      - ./web1:/usr/share/nginx/html
    labels:
      virtual.bind: 80 web1.local
    networks:
      - gateway

  # 测试服务 2 - 带路径的 Nginx 网站
  web2:
    image: nginx:alpine
    container_name: web2
    restart: unless-stopped
    volumes:
      - ./web2:/usr/share/nginx/html
    labels:
      virtual.bind: /api 80 web2.local | header Server "My Custom Server"
    networks:
      - gateway

  # 测试服务 3 - 带多个主机名和指令的 Nginx 网站
  web3:
    image: nginx:alpine
    container_name: web3
    restart: unless-stopped
    volumes:
      - ./web3:/usr/share/nginx/html
    labels:
      virtual.bind: 80 web3.local www.web3.local | host:tls internal | header Strict-Transport-Security "max-age=31536000"
    networks:
      - gateway

volumes:
  caddy_data:
  caddy_config:

networks:
  gateway:
    external: false
